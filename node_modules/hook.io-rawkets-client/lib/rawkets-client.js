var Hook = require("hook.io").Hook,
	util = require("util"),
	express = require("express"),
	app,
	io;

var RawketsClient = exports.RawketsClient = function(options){
	Hook.call(this, options);
	var self = this;

	self.initExpress();
	self.initSockets();
};

// RawketsClient inherits from Hook
util.inherits(RawketsClient, Hook);

RawketsClient.prototype.initExpress = function() {
	// Configure Express
	app = express.createServer();
	io = require("socket.io").listen(app);

	app.configure(function(){
		app.set("views", __dirname + "/views");
		app.set("view engine", "hbs");
		app.use(express.bodyParser());
		app.use(express.methodOverride());
		app.use(app.router);
		app.use(express.static(__dirname + "/../../../public"));
	});

	app.configure("development", function(){
		app.use(express.errorHandler({dumpExceptions: true, showStack: true}));
	});

	app.configure("production", function(){
		app.use(express.errorHandler());
	});

	app.listen(8000);
};

RawketsClient.prototype.initSockets = function() {
	var self = this;

	// Configure Socket.IO
	io.set("log level", 2);
	io.set("transports", [
		"websocket",
		"flashsocket"
	]);

	// Client connected
	io.sockets.on("connection", function(client) {
		self.emit("socket::connect", client.id);

		// Client disconnected
		client.on("disconnect", function() {
			self.emit("socket::disconnect", client.id);
		});

		// Client sent a message
		client.on("game message", function(msg) {
			self.emit("socket::message", msg);
		});
	});
};